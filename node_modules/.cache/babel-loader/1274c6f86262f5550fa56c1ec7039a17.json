{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\soen341\\\\SOEN-341-main\\\\src\\\\stripe_payment\\\\Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CheckoutProduct from '../CheckoutProduct.js';\nimport './Payment.css';\nimport { useStateValue } from \"../StateProvider\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { db } from '../firebase';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { getBaskeTotal } from '../reducer';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from './axios.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const stripe = useStripe();\n  const history = useNavigate();\n  const [clientSecret, setClientSecret] = useState(true);\n  useEffect(() => {\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        url: `/payments/create?total=${getBaskeTotal(basket) * 100}`\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [basket]);\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(_ref => {\n      let {\n        paymentIntent\n      } = _ref;\n      db.collection('users').doc(user === null || user === void 0 ? void 0 : user.uid).collection('orders').doc(paymentIntent.id).set({\n        basket: basket,\n        amount: paymentIntent.amount,\n        created: paymentIntent.created\n      });\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      dispatch({\n        type: 'EMPTY_BASKET'\n      });\n      history('/orders');\n    });\n  };\n\n  const handleChange = async event => {\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const [error, setError] = useState(null);\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Checkout (\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/checkout\",\n          children: [basket === null || basket === void 0 ? void 0 : basket.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"1234 Jarry Est\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Montreal, CA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Review Items and Delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_items\",\n          children: basket.map(item => /*#__PURE__*/_jsxDEV(CheckoutProduct, {\n            id: item.id,\n            title: item.title,\n            image: item.image,\n            price: item.price,\n            rating: item.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"payment_details\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CardElement, {\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"payment_priceContainer\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n                renderText: value => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"Order Total \", value]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 43\n                  }, this)\n                }, void 0, false),\n                decimalScale: 2,\n                value: getBaskeTotal(basket),\n                displayType: \"text\",\n                thousandSeparator: true,\n                prefix: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: processing || disabled || succeeded,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: processing ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Processing...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 57\n                  }, this) : 'Buy Now!'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Payment, \"GziWeSeKAkU/leMge2K+Vovvrx0=\", false, function () {\n  return [useStateValue, useStripe, useNavigate, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/soen341/SOEN-341-main/src/stripe_payment/Payment.js"],"names":["React","useEffect","useState","CheckoutProduct","useStateValue","CurrencyFormat","db","Link","useNavigate","getBaskeTotal","CardElement","useElements","useStripe","axios","Payment","basket","user","dispatch","stripe","history","clientSecret","setClientSecret","getClientSecret","response","method","url","data","elements","handleSubmit","event","preventDefault","setProcessing","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","amount","created","setSucceeded","setError","type","handleChange","setDisabled","empty","error","message","succeeded","processing","disabled","length","email","map","item","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport CheckoutProduct from '../CheckoutProduct.js';\nimport './Payment.css';\nimport {useStateValue} from \"../StateProvider\";\nimport CurrencyFormat from \"react-currency-format\";\nimport {db} from '../firebase';\nimport {Link, useNavigate} from \"react-router-dom\";\nimport { getBaskeTotal } from '../reducer';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from './axios.js';\n\n\n\n\nfunction Payment() {\n\n\n\nconst [{basket, user}, dispatch] = useStateValue();\nconst stripe = useStripe();\nconst history = useNavigate();\nconst [clientSecret, setClientSecret]=useState(true);\n\nuseEffect(() => {\n    const getClientSecret = async () => {\n        const response = await axios({\n            method: 'post',\n            url: `/payments/create?total=${getBaskeTotal(basket) * 100}`\n        });\n        setClientSecret(response.data.clientSecret)\n    }\n\n    getClientSecret();\n}, [basket])\nconst elements = useElements();\nconst handleSubmit = async (event) => {\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, \n        {payment_method :{\n            card: elements.getElement(CardElement)\n        }}).then(({paymentIntent})=> {\n            db\n                .collection('users')\n                .doc(user?.uid)\n                .collection('orders')\n                .doc(paymentIntent.id)\n                .set({\n                    basket: basket,\n                    amount: paymentIntent.amount,\n                    created: paymentIntent.created\n                })\n            setSucceeded(true);\n            setError(null);\n            setProcessing(false);\n            dispatch({\n                type: 'EMPTY_BASKET'\n            })\n            history('/orders');\n        }) ;\n}\nconst handleChange = async (event) => {\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n\n}\n\nconst [error, setError] = useState(null);\nconst [succeeded, setSucceeded] = useState(false);\nconst [processing, setProcessing] = useState(\"\");\nconst [disabled, setDisabled] = useState(true);\n\n\n\n  return (\n      <div className='payment'>\n          <div className='payment_container'>\n              <h1>\n                  Checkout (\n                      <Link to=\"/checkout\">{basket?.length} items</Link>\n                  )\n              </h1>\n              <div className='payment_section'>\n                    <div className='payment_title'>\n                        <h3>Delivery Address</h3>\n                        </div>\n                    <div className='payment_address'>\n                        <p>{user?.email}</p>\n                        <p>1234 Jarry Est</p>\n                        <p>Montreal, CA</p>\n                        </div>\n                  </div>\n\n            \n                <div className='payment_section'>\n                    <div className='payment_title'>\n                        <h3>Review Items and Delivery</h3>\n                        </div>\n                    <div className='payment_items'>\n                        {basket.map(item => (\n                           <CheckoutProduct\n                           id= {item.id}\n                           title= {item.title}\n                           image= {item.image}\n                           price= {item.price}\n                           rating= {item.rating}\n                           />\n                        ))}\n                        </div>\n\n                  </div>\n\n                <div className='payment_section'>\n                    <div className='payment_title'>\n                        <h3>Payment Method</h3>\n                        </div>\n                        <div class=\"payment_details\">\n                            <form onSubmit={handleSubmit}>\n                                <CardElement onChange={handleChange}/>\n                                <div class=\"payment_priceContainer\">\n                              <CurrencyFormat\n                                  renderText={(value) => (\n                                      <>\n                                          <h3>\n                                              Order Total {value}\n                                          </h3>\n                                      </>\n                                  )}\n                                  decimalScale={2}\n                                  value={getBaskeTotal(basket)}\n                                  displayType={\"text\"}\n                                  thousandSeparator={true}\n                                  prefix={\"$\"}\n                              />\n                              <button disabled={processing || disabled || succeeded}>\n                                    <span>{processing ? <p>Processing...</p> : 'Buy Now!'}</span>\n                              </button>\n                                    </div>\n                            </form>\n                            </div>\n\n                  </div>\n            \n            </div>\n          \n          </div>\n  )\n}\n\nexport default Payment"]},"metadata":{},"sourceType":"module"}